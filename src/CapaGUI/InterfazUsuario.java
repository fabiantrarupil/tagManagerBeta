/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaGUI;

import CapaDatos.Administrador;
import CapaNegocio.NegocioAdministrador;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Kyle
 */
public class InterfazUsuario extends javax.swing.JFrame {

    /**
     * Creates new form InterfazUsuario
     */
    public InterfazUsuario() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.mostrarTabla();
    }

    //llama a la clase negocio
    NegocioAdministrador neg = new NegocioAdministrador();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnIngresar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsultarAdministrador = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtIdAdministrador = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRutAdministrador = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPasswordAdministrador = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombreAdministrador = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtApellidoAdministradot = new javax.swing.JTextField();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Interfaz de gesti√≥n de Administrador");

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        tblConsultarAdministrador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblConsultarAdministrador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConsultarAdministradorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblConsultarAdministrador);

        jLabel1.setText("ID:");

        txtIdAdministrador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdAdministradorKeyTyped(evt);
            }
        });

        jLabel2.setText("Rut:");

        txtRutAdministrador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRutAdministradorKeyTyped(evt);
            }
        });

        jLabel3.setText("Password");

        txtPasswordAdministrador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPasswordAdministradorKeyTyped(evt);
            }
        });

        jLabel4.setText("Nombre");

        txtNombreAdministrador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreAdministradorKeyTyped(evt);
            }
        });

        jLabel5.setText("Apellido");

        txtApellidoAdministradot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoAdministradotKeyTyped(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPasswordAdministrador)
                                    .addComponent(txtApellidoAdministradot)
                                    .addComponent(txtNombreAdministrador)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(46, 46, 46)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtRutAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtIdAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVolver)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtIdAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtRutAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPasswordAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNombreAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtApellidoAdministradot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnIngresar)
                            .addComponent(btnModificar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminar)
                            .addComponent(btnLimpiar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVolver)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        // Guardar datos en objeto
        Administrador adm = new Administrador();
        adm.setIdAdministrador(Integer.parseInt(this.txtIdAdministrador.getText().trim()));
        adm.setRut(this.txtRutAdministrador.getText().trim());
        adm.setPassword(this.txtPasswordAdministrador.getText().trim());
        adm.setNombre(this.txtNombreAdministrador.getText().trim());
        adm.setApellido(this.txtApellidoAdministradot.getText().trim());

        neg.IngresarAdministrador(adm);

        this.mostrarTabla();
        this.limpiarCampos();
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        //modificarf por id
        if ((this.txtIdAdministrador.getText().trim().equals(""))
                || (this.txtIdAdministrador.getText().trim().equals("0"))) {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar un administrador o ingresar un ID",
                    "Error al Eliminar",
                    JOptionPane.ERROR_MESSAGE);
            this.btnEliminar.requestFocus();
            return;
        } else {

            // Guardar datos en objeto
            Administrador adm = new Administrador();
            adm.setIdAdministrador(Integer.parseInt(this.txtIdAdministrador.getText().trim()));
            adm.setRut(this.txtRutAdministrador.getText().trim());
            adm.setPassword(this.txtPasswordAdministrador.getText().trim());
            adm.setNombre(this.txtNombreAdministrador.getText().trim());
            adm.setApellido(this.txtApellidoAdministradot.getText().trim());

            neg.ModificarAdministrador(adm);

            this.mostrarTabla();
            this.limpiarCampos();
        }//fin else
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        Administrador adm = new Administrador();

        //eliminar por id
        if ((this.txtIdAdministrador.getText().trim().equals(""))
                || (this.txtIdAdministrador.getText().trim().equals("0"))) {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar un Usuario o ingresar un ID",
                    "Error al Eliminar",
                    JOptionPane.ERROR_MESSAGE);
            this.btnEliminar.requestFocus();
            return;
        } else {

            int opcion = 0;
            opcion = JOptionPane.showConfirmDialog(this,
                    "¬øDesea eliminar el producto? \n ",
                    "Confirmar Eliminaci√≥n",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (opcion == JOptionPane.YES_OPTION) {
                adm.setIdAdministrador(Integer.parseInt(this.txtIdAdministrador.getText().trim()));
                neg.eliminarAdministrador(adm);
                //jt.visualizaDialogo(this, "Eliminado exitosamente!", "Eliminaci√≥n exitosa", 1000);

                this.mostrarTabla();

            }
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        this.limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtIdAdministradorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdAdministradorKeyTyped
        if (evt.getKeyChar() < '0' || evt.getKeyChar() > '9') {
            evt.consume();
        } else {
            if (this.txtIdAdministrador.getText().trim().length() > 4) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtIdAdministradorKeyTyped

    private void txtRutAdministradorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRutAdministradorKeyTyped
        if (this.txtRutAdministrador.getText().trim().length() > 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtRutAdministradorKeyTyped

    private void txtPasswordAdministradorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordAdministradorKeyTyped
        if (this.txtPasswordAdministrador.getText().trim().length() > 32) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPasswordAdministradorKeyTyped

    private void txtNombreAdministradorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreAdministradorKeyTyped
        if (this.txtNombreAdministrador.getText().trim().length() > 30) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreAdministradorKeyTyped

    private void txtApellidoAdministradotKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoAdministradotKeyTyped
        if (this.txtApellidoAdministradot.getText().trim().length() > 30) {
            evt.consume();
        }
    }//GEN-LAST:event_txtApellidoAdministradotKeyTyped

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.dispose();
        MenuAdministrador pantalla = new MenuAdministrador();
            pantalla.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void tblConsultarAdministradorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblConsultarAdministradorMouseClicked
       if (evt.getButton() == 1) {
            //cambia font
            //consigue la fila seleccionada
            int row = this.tblConsultarAdministrador.getSelectedRow();

            //crea el objeto
            Administrador adm = new Administrador();
            try {
                //cantidad total de objetos (a partir de 1)
                Object[] datos = new Object[5];

                for (int i = 0; i < datos.length; i++) {
                    datos[i] = this.tblConsultarAdministrador.getValueAt(row, i);
                }
                //Se rescata el id del producto a partir del dato de la fila
                adm = neg.BuscarAdministrador(Integer.parseInt(datos[0].toString()));
                if (adm.getIdAdministrador()!= 0) {

                    //setea campos
                    this.txtIdAdministrador.setText("" + adm.getIdAdministrador());
                    this.txtRutAdministrador.setText(adm.getRut());
                    this.txtPasswordAdministrador.setText(adm.getPassword());
                    this.txtNombreAdministrador.setText("" + adm.getNombre());
                    this.txtApellidoAdministradot.setText("" + adm.getApellido());
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Usuario no existe",
                            "Error de busqueda", JOptionPane.ERROR_MESSAGE);
                }

                //Atrapa el error
            } catch (Exception e) {

                JOptionPane.showMessageDialog(this,
                        "Ocurrio un error",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);

                return;
            }
        }
    }//GEN-LAST:event_tblConsultarAdministradorMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblConsultarAdministrador;
    private javax.swing.JTextField txtApellidoAdministradot;
    private javax.swing.JTextField txtIdAdministrador;
    private javax.swing.JTextField txtNombreAdministrador;
    private javax.swing.JTextField txtPasswordAdministrador;
    private javax.swing.JTextField txtRutAdministrador;
    // End of variables declaration//GEN-END:variables
private void mostrarTabla() {
        ArrayList<Administrador> lista = neg.getConsultarAdministrador();

        //numero de objetos
        Object[] datos = new Object[5];

        //Tabla seleccionable pero NO editable
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        //Para ordenar tabla con click en cabecera
        TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(modelo);
        tblConsultarAdministrador.setRowSorter(elQueOrdena);

        //Definir las columnas del modelo
        modelo.addColumn("ID");
        modelo.addColumn("Rut");
        modelo.addColumn("Password");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");

        //tblConsultarProducto.setDefaultRenderer(Object.class, new TableCellRendererProducto());
        for (int i = 0; i < lista.size(); i++) {
            Administrador adm = lista.get(i);

            datos[0] = adm.getIdAdministrador();
            datos[1] = adm.getRut();
            datos[2] = adm.getPassword();
            datos[3] = adm.getNombre();
            datos[4] = adm.getApellido();

            modelo.addRow(datos);

        }

        this.tblConsultarAdministrador.setModel(modelo);
        this.tblConsultarAdministrador.getTableHeader().setReorderingAllowed(true);

    }

    private void limpiarCampos() {

        this.txtIdAdministrador.setText("");
        this.txtRutAdministrador.setText("");
        this.txtPasswordAdministrador.setText("");
        this.txtNombreAdministrador.setText("");
        this.txtApellidoAdministradot.setText("");

    }
}
